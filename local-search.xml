<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>面向对象</title>
    <link href="/2021/01/06/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <url>/2021/01/06/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<p> 面向对象是一种思想。百度百科：面向对象方法,把相关的数据和方法组织为一个整体来看待,从更高的层次来进行系统建模,更贴近事物的自然运行模式。</p><blockquote><p>面向对象的方法逻辑：</p><ol><li>找出题目实体,抽象成对象的概念。</li><li>分析实体属性和功能,给对象赋一些属性和方法。</li><li>让实体相互作用得出结果,让每个对象去执行自己的方法。</li></ol></blockquote><h2 id="JS对面向对象的实现"><a href="#JS对面向对象的实现" class="headerlink" title="JS对面向对象的实现"></a>JS对面向对象的实现</h2><blockquote><p>面向对象如论用什么语言实现,都主要是为了完成三个目标：重用性、灵活性和扩展性。它的主要特征有：继承 封装 多态。<br>意思是只要我们设计的程序完成了以上的目标,那就是一个面向对象的实现。</p></blockquote><h3 id="在JS里是通过原型去实现面向对象的"><a href="#在JS里是通过原型去实现面向对象的" class="headerlink" title="在JS里是通过原型去实现面向对象的"></a>在JS里是通过原型去实现面向对象的</h3><blockquote><p>和主流的面向对象语言不同,js里是通过原型去实现面向对象的。</p></blockquote><blockquote><p>基于原型的面向对象系统通过“复制”的方式来创建新对象。</p></blockquote><pre><code>// js里的引用类型都是对象。// 对象是函数创建的, 比如new Object() new Array()等// 所有对象都有__proto__这个属性(也有例外)。Object.create(null)// 每个函数都有一个prototype属性,prototype是一个对象(也就是我们心心念的原型对象)。这个对象里有一个属性constructor又指回该函数。// 所以说，函数有prototype属性和__proto__属性// 对象的__proto__属性     指向      他的  创建者的prototype  // 所有对象的实例，可以共享原型对象上面的属性和方法   这是我们为啥使用原型的核心// JS里存在 两个原始的函数   Object   Function</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>flex布局</title>
    <link href="/2021/01/04/1.flex%E5%B8%83%E5%B1%80/"/>
    <url>/2021/01/04/1.flex%E5%B8%83%E5%B1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h1><style>img{    width:500px}</style><blockquote><p>flex 英文直观意思为伸缩，我们可以理解为 “弹性” 布局。<br>也许你听到过有人讲flex不兼容某些低版本浏览器~，但是在2021年,兼容性问题早已是老黄历，大胆用。<br>掌握flex布局，可以显著提高我们前端程序员的幸福感。</p></blockquote><h2 id="flex容器"><a href="#flex容器" class="headerlink" title="flex容器"></a>flex容器</h2><blockquote><p>只需要在元素上加上display:flex属性或者display:inline-flex，该元素就自动成为了一个flex容器<br>开启了flex布局后,他的子元素自动成为容器成员.<br>容器成员的float、clear和vertical-align属性将失效</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">1</span>&lt;/div&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">2</span>&lt;/div&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">3</span>&lt;/div&gt;<br>&lt;/div&gt;<br><br>.<span class="hljs-attribute">content</span>&#123;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">flex-direction</span>: column;<br>&#125;<br><span class="hljs-comment">/* item成为了容器成员 */</span><br>.item&#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;<span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">float</span>: left; <span class="hljs-comment">/* 此时float:left无效 */</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="容器里的轴"><a href="#容器里的轴" class="headerlink" title="容器里的轴"></a>容器里的轴</h2><blockquote><p>轴的概念非常重要,容器元素默认按照<strong>主轴的方向排列</strong>,换行时往交叉轴的方向去换行</p></blockquote><ul><li><p>主轴:主轴默认是横的，顺序是从左到右</p></li><li><p>交叉轴:交叉抽默认是竖的，顺序是从上到下</p></li><li><p>也可以理解为<strong>主轴顺时针旋转90度就成了交叉轴</strong></p></li></ul><p><img src="./flex-imgs/cross.jpg"></p><h2 id="容器的属性"><a href="#容器的属性" class="headerlink" title="容器的属性"></a>容器的属性</h2><blockquote><p>写在容器本身上</p></blockquote><ul><li><p>flex-direction</p></li><li><p>flex-wrap</p></li><li><p>flex-flow</p></li><li><p>justify-content</p></li><li><p>align-items</p></li><li><p>align-content</p></li></ul><h3 id="flex-direction-决定了主轴的方向"><a href="#flex-direction-决定了主轴的方向" class="headerlink" title="flex-direction 决定了主轴的方向"></a>flex-direction 决定了主轴的方向</h3><ol><li>row:(默认值)横向从左到右。</li><li>row-reverse:横向从右到左。</li><li>column: 竖向从上到下。</li><li>column-reverse:竖向从下到上。</li></ol><blockquote><p>改变了主轴后，交叉轴随之改变  就是主轴顺时针旋转90度</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">1</span>&lt;/div&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">2</span>&lt;/div&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">3</span>&lt;/div&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">4</span>&lt;/div&gt;<br>&lt;/div&gt;<br><br>.<span class="hljs-attribute">content</span>&#123;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">360px</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">360px</span>;<br><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#999</span>;<br><span class="hljs-comment">/* flex-direction: row; */</span><br><span class="hljs-comment">/* flex-direction: row-reverse; */</span><br><span class="hljs-comment">/* flex-direction: column; */</span><br><span class="hljs-attribute">flex-direction</span>: column-reverse;<br>&#125;<br>.item&#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/direction1.jpg"><br><img src="./flex-imgs/direction2.jpg"><br><img src="./flex-imgs/direction3.jpg"><br><img src="./flex-imgs/direction4.jpg"></p><h3 id="flex-wrap-换行方式"><a href="#flex-wrap-换行方式" class="headerlink" title="flex-wrap  换行方式"></a>flex-wrap  换行方式</h3><blockquote><p>注意 flex元素默认是不换行的  </p></blockquote><blockquote><p>ps:那如果内容实在排不下怎么办? flex子元素会智能压缩空间(宽高失效，line-height,padding，font-size有效),一直压倒内容部分，如果压缩完还排不下，会溢出父元素。<br>如果子元素里没内容(空div,设的有宽高),那他会压缩到这个div的宽度为0为止 </p></blockquote><ol><li>nowrap (默认值) 不换行  </li><li>wrap  换行 第一行在上</li><li>wrap-reverse  第一行在下</li></ol><h3 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h3><blockquote><p>flew-flow为flex-direction和flex-wrap的简写  不再赘述</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br>flex-flow: row nowrap;<br><span class="hljs-comment">&lt;!-- 主轴从左到右，不换行--&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="justify-content-主轴对齐方式"><a href="#justify-content-主轴对齐方式" class="headerlink" title="justify-content 主轴对齐方式"></a>justify-content 主轴对齐方式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.content</span>&#123;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;<br><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#999</span>;<br><span class="hljs-comment">/* 主轴方向 */</span><br><span class="hljs-comment">/* flex-direction: row; */</span><br><span class="hljs-comment">/* flex-direction: row-reverse; */</span><br><span class="hljs-comment">/* flex-direction: column; */</span><br><span class="hljs-comment">/* flex-direction: column-reverse; */</span><br><br><span class="hljs-comment">/* 换行方式 */</span><br><span class="hljs-comment">/* flex-wrap: wrap-reverse; */</span><br><span class="hljs-comment">/* flex-wrap: wrap; */</span><br><span class="hljs-comment">/* flex-wrap: nowrap; */</span><br><br><span class="hljs-comment">/* flex-flow */</span><br><span class="hljs-attribute">flex-flow</span>: row nowrap;<br><br><span class="hljs-comment">/* 主轴对齐方式 */</span><br><br> <span class="hljs-attribute">justify-content</span>: flex-start; <br><span class="hljs-comment">/* justify-content: flex-end; */</span><br><span class="hljs-comment">/* justify-content: center; */</span><br><span class="hljs-comment">/* justify-content: space-around; */</span><br><span class="hljs-comment">/* justify-content: space-between; */</span><br><span class="hljs-comment">/* justify-content: space-evenly; */</span><br><br>&#125;<br></code></pre></td></tr></table></figure><ol><li>flex-start：与主轴的起点对齐</li></ol><p><img src="./flex-imgs/justify-content-flex-start.jpg"></p><ol start="2"><li>flex-end:与主轴的终点对齐</li></ol><p><img src="./flex-imgs/justify-content-flex-end.jpg"></p><ol start="3"><li>center:居中</li></ol><p><img src="./flex-imgs/justify-content-center.jpg"></p><ol start="4"><li>space-between:两边分别对齐主轴的两端，中间的均匀分布</li></ol><p><img src="./flex-imgs/justify-content-space-between.jpg"></p><ol start="5"><li>space-around：中间距离是两边距离的二倍。</li></ol><p><img src="./flex-imgs/justify-content-space-around.jpg"></p><ol start="6"><li>space-evenly：均匀分布。</li></ol><p><img src="./flex-imgs/justify-content-space-evenly.jpg"></p><h3 id="align-items定义了项目在交叉轴上的对齐方式"><a href="#align-items定义了项目在交叉轴上的对齐方式" class="headerlink" title="align-items定义了项目在交叉轴上的对齐方式"></a>align-items定义了项目在交叉轴上的对齐方式</h3><ol><li><p>flex-start:交叉轴的起点对齐(默认)</p></li><li><p>flex-end:交叉轴的终点对齐</p></li><li><p>center:交叉轴的中间对齐</p></li><li><p>baseline:项目中第一行文字基线对齐</p></li><li><p>stretch:如果项目未设置高度或者auto,将占领整个屏幕的高度。</p></li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">flex-flow</span>: row nowrap;<br><span class="hljs-attribute">align-items</span>: flex-start;<br><br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/align-items-flex-start.jpg"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">flex-flow</span>: row nowrap;<br><span class="hljs-attribute">align-items</span>: flex-end;<br><br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/align-items-flex-end.jpg"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">flex-flow</span>: row nowrap;<br><span class="hljs-attribute">align-items</span>: center;<br><br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/align-items-center.jpg"></p><h3 id="align-content-定义了多根轴线的对齐方式。"><a href="#align-content-定义了多根轴线的对齐方式。" class="headerlink" title="align-content 定义了多根轴线的对齐方式。"></a>align-content 定义了多根轴线的对齐方式。</h3><blockquote><p>用于控制多行项目的对齐方式，如果项目只有一行则不会起作用；<br>默认stretch，即在项目没设置高度，或高度为auto情况下让项目填满整个容器，与align-items类似。</p></blockquote><ol><li>flex-start：与交叉轴的起点对齐。</li><li>flex-end：与交叉轴的终点对齐。</li><li>center：与交叉轴的中点对齐。</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li>stretch（默认值）：轴线占满整个交叉轴。</li><li>space-evenly;：在交叉轴平均分布。</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs awk">.content&#123;<br>display: flex;<br>width: <span class="hljs-number">600</span>px;<br>height: <span class="hljs-number">600</span>px;<br>border: <span class="hljs-number">1</span>px solid <span class="hljs-comment">#999;</span><br><span class="hljs-regexp">/* 主轴方向 */</span><br><span class="hljs-regexp">/* flex-direction: row; */</span><br><span class="hljs-regexp">/* flex-direction: row-reverse; */</span><br><span class="hljs-regexp">/* flex-direction: column; */</span><br><span class="hljs-regexp">/* flex-direction: column-reverse; */</span><br><br><span class="hljs-regexp">/* 换行方式 */</span><br><span class="hljs-regexp">/* flex-wrap: wrap-reverse; */</span><br><span class="hljs-regexp">/* flex-wrap: wrap; */</span><br><span class="hljs-regexp">/* flex-wrap: nowrap; */</span><br><br><span class="hljs-regexp">/* flex-flow */</span><br>flex-flow: row wrap;<br><br><span class="hljs-regexp">/* 主轴对齐方式 */</span><br><br><span class="hljs-regexp">/* justify-content: flex-start; */</span><br><span class="hljs-regexp">/* justify-content: flex-end; */</span><br><span class="hljs-regexp">/* justify-content: center; */</span><br><span class="hljs-regexp">/* justify-content: space-around; */</span><br><span class="hljs-regexp">/* justify-content: space-between; */</span><br><span class="hljs-regexp">/* justify-content: space-evenly; */</span><br><br>     <span class="hljs-regexp">/* 交叉轴对齐方式 */</span><br>    <span class="hljs-regexp">/* align-items: center; */</span><br><span class="hljs-regexp">/* align-items:  flex-start; */</span><br><span class="hljs-regexp">/* align-items:  flex-end; */</span><br> <span class="hljs-regexp">/* align-items:  baseline; */</span><br> <span class="hljs-regexp">/* align-items: stretch; */</span><br> <br> <span class="hljs-regexp">/* 多个交叉轴对齐方式 */</span><br> <span class="hljs-regexp">/* align-content: flex-start; */</span><br> <span class="hljs-regexp">/* align-content:flex-end; */</span><br> <span class="hljs-regexp">/* align-content: center; */</span><br><span class="hljs-regexp">/* align-content: space-between; */</span><br><span class="hljs-regexp">/* align-content: space-around; */</span><br>align-content: space-evenly;<br><span class="hljs-regexp">/* align-content:stretch; */</span><br><br><br><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/align-content.png"></p><h2 id="容器的项目属性"><a href="#容器的项目属性" class="headerlink" title="容器的项目属性"></a>容器的项目属性</h2><blockquote><p>项目属性是定义在子元素上的 他有6个值  如下：</p></blockquote><ul><li><p>order  </p></li><li><p>flex-grow </p></li><li><p>flex-shrink</p></li><li><p>flex-basis</p></li><li><p>flex</p></li><li><p>align-self</p></li></ul><h4 id="order-默认0，用于决定项目排列顺序，数值越小，项目排列越靠前。"><a href="#order-默认0，用于决定项目排列顺序，数值越小，项目排列越靠前。" class="headerlink" title="order 默认0，用于决定项目排列顺序，数值越小，项目排列越靠前。"></a>order 默认0，用于决定项目排列顺序，数值越小，项目排列越靠前。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.item</span>&#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">line-height</span>:<span class="hljs-number">40px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(1)</span>&#123;<br><span class="hljs-attribute">order</span>: <span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(2)</span>&#123;<br><span class="hljs-attribute">order</span>: <span class="hljs-number">9</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(3)</span>&#123;<br><span class="hljs-attribute">order</span>: <span class="hljs-number">100</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(4)</span>&#123;<br><span class="hljs-attribute">order</span>: <span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(5)</span>&#123;<br><span class="hljs-attribute">order</span>: <span class="hljs-number">1</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/order.jpg"></p><h4 id="flex-grow"><a href="#flex-grow" class="headerlink" title="flex-grow"></a>flex-grow</h4><h4 id="比如父元素宽度600-三个子元素宽度都是100-那肯定是还有剩余空间（300），如何弹性的填满他们呢"><a href="#比如父元素宽度600-三个子元素宽度都是100-那肯定是还有剩余空间（300），如何弹性的填满他们呢" class="headerlink" title="比如父元素宽度600  三个子元素宽度都是100 那肯定是还有剩余空间（300），如何弹性的填满他们呢?"></a>比如父元素宽度600  三个子元素宽度都是100 那肯定是还有剩余空间（300），如何弹性的填满他们呢?</h4><h4 id="flex-grow决定如何填满他们，这个非常像分家产，富豪去世了，大房分多少，二房分多少等等。"><a href="#flex-grow决定如何填满他们，这个非常像分家产，富豪去世了，大房分多少，二房分多少等等。" class="headerlink" title="flex-grow决定如何填满他们，这个非常像分家产，富豪去世了，大房分多少，二房分多少等等。"></a>flex-grow决定如何填满他们，这个非常像分家产，富豪去世了，大房分多少，二房分多少等等。</h4><blockquote><p>默认0，用于决定项目在有剩余空间的情况下是否放大，默认0 是不放大；<br>注意，即便设置了固定宽度，也会放大。</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.item</span>&#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">line-height</span>:<span class="hljs-number">40px</span>;<br><span class="hljs-attribute">outline</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;<br><span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">0</span>; <span class="hljs-comment">/* 为0 无事发生 */</span><br><span class="hljs-attribute">flex-grow</span>:<span class="hljs-number">1</span>; 每个子元素宽度变成了200 <br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>这里剩余分配的概念很好理解,已flex-grow:1为例子 </p><ol><li>总宽度600  三个子元素各100，占了300  剩余300</li><li>item属性里有flex-grow:1; 证明三个子元素都想来分家产 总股份是1+1+1=3    他们的占比都是1/3</li><li>那三个子元素分到的就是300*1/3 = 100    再加上自己宽度100  最终算出来宽度200</li></ol><p>所以说，子元素如果等分的话，flex-grow写多少无所谓  比如上边flex-grow:5<br>总股份是5+5+5 = 15    但是每个人的占比没变，还是1/3所以无所谓</p><p>那如果是占比不一样的情况呢?</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.item</span> &#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">40px</span>;<br><span class="hljs-attribute">outline</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;<br>&#125;<br><br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;<br><span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(2)</span> &#123;<br><span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(3)</span> &#123;<br><span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">2</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>代码如上，把123个元素的flex-grow分别设置为0 1 2</p><p>现在总股份依然是3  但是元素1没多占,元素2分到100  元素3分到200</p><p>那他们的宽度会变成 100 200 300     </p><p><img src="./flex-imgs/flex-grow.jpg"></p><h4 id="flex-shrink"><a href="#flex-shrink" class="headerlink" title="flex-shrink"></a>flex-shrink</h4><h4 id="flex-shrink属性定义了项目的缩小比例，默认为1，如果flex-wrap设置为nowrap不折行，但是空间不足，那该项目将缩小。"><a href="#flex-shrink属性定义了项目的缩小比例，默认为1，如果flex-wrap设置为nowrap不折行，但是空间不足，那该项目将缩小。" class="headerlink" title="flex-shrink属性定义了项目的缩小比例，默认为1，如果flex-wrap设置为nowrap不折行，但是空间不足，那该项目将缩小。"></a>flex-shrink属性定义了项目的缩小比例，默认为1，如果flex-wrap设置为nowrap不折行，但是空间不足，那该项目将缩小。</h4><h4 id="他的默认值为1，也就是所有子元素一起等比缩小。-这个比较像出事了，需要大家凑钱"><a href="#他的默认值为1，也就是所有子元素一起等比缩小。-这个比较像出事了，需要大家凑钱" class="headerlink" title="他的默认值为1，也就是所有子元素一起等比缩小。 这个比较像出事了，需要大家凑钱"></a>他的默认值为1，也就是所有子元素一起等比缩小。 这个比较像出事了，需要大家凑钱</h4><blockquote><p>flex-shrink:0时表示该不缩小</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">1</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">2</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">3</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">4</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">5</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">6</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">7</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">8</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;/<span class="hljs-keyword">div</span>&gt;<br><br><br>.content&#123;<br>flex-flow: row nowrap; &lt;!<span class="hljs-comment">-- 不折行--&gt;</span><br><br>&#125;<br>.<span class="hljs-built_in">item</span> &#123;<br>height: <span class="hljs-number">100</span>px;<br>width: <span class="hljs-number">100</span>px;<br>margin: <span class="hljs-number">10</span>px <span class="hljs-number">0</span>px;<br>background: <span class="hljs-comment">#fc0;</span><br><span class="hljs-built_in">text</span>-align: center;<br>font-size: <span class="hljs-number">16</span>px;<br>color: <span class="hljs-comment">#fff;</span><br>line-height: <span class="hljs-number">40</span>px;<br>outline: <span class="hljs-number">1</span>px solid <span class="hljs-comment">#f00;</span><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/flex-shrink1.jpg"></p><p>flex-shrink:0时 不压缩</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.item</span> &#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">40px</span>;<br><span class="hljs-attribute">outline</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;<br><span class="hljs-attribute">flex-shrink</span>:<span class="hljs-number">0</span>   &lt;!-- 设置为不压缩--&gt;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/flex-shrink2.jpg"></p><p>那么这个压缩怎么计算的呢？</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">1</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">2</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">3</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">4</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">5</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">6</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">7</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;/<span class="hljs-keyword">div</span>&gt;<br>.<span class="hljs-built_in">item</span> &#123;<br>height: <span class="hljs-number">100</span>px;<br>width: <span class="hljs-number">100</span>px;<br>margin: <span class="hljs-number">10</span>px <span class="hljs-number">0</span>px;<br>background: <span class="hljs-comment">#fc0;</span><br><span class="hljs-built_in">text</span>-align: center;<br>font-size: <span class="hljs-number">16</span>px;<br>color: <span class="hljs-comment">#fff;</span><br>line-height: <span class="hljs-number">40</span>px;<br>outline: <span class="hljs-number">1</span>px solid <span class="hljs-comment">#f00;</span><br>flex-shrink: <span class="hljs-number">0</span>;<br>&#125;<br><br>.<span class="hljs-built_in">item</span>:nth-child(<span class="hljs-number">1</span>) &#123;<br>flex-shrink: <span class="hljs-number">3</span>;<br>width:<span class="hljs-number">200</span>px<br>&#125;<br>.<span class="hljs-built_in">item</span>:nth-child(<span class="hljs-number">2</span>) &#123;<br>flex-shrink: <span class="hljs-number">4</span>;<br>&#125;<br>.<span class="hljs-built_in">item</span>:nth-child(<span class="hljs-number">3</span>) &#123;<br>flex-shrink: <span class="hljs-number">3</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>以上，我们让元素 4567不压缩   只压缩123  而且元素1的宽度设置为200 他的计算如下：</p><ol><li>父级宽度600  子元素正常宽度800   那就是有200的缺口</li><li>这里需要注意了，压缩和flow不同，他不是分份额那么简单了。他还需要考虑元素宽度的情况。</li><li>计算出总份额：3<em>200 + 4</em>100 +3*100 = 1300;</li><li>元素1的比例就是 3*200/1300 = 0.46153846153846156; 意思就是说200的缺口里元素1得出 46.153846153846156%;</li><li>元素2的比例就是 4*100/1300 = 0.3076923076923077; 意思就是说200的缺口里元素2得出 30.76923076923077%;</li><li>于是 200*46.153846153846156% = 92.30768;  元素1得宽度是自身宽度200-92.30768 = 107.69232</li></ol><p>如图所示，结果符合我们的预期</p><p><img src="./flex-imgs/flex-shrink3.jpg"></p><h3 id="flex-basis-设置元素主轴初始尺寸"><a href="#flex-basis-设置元素主轴初始尺寸" class="headerlink" title="flex-basis  设置元素主轴初始尺寸"></a>flex-basis  设置元素主轴初始尺寸</h3><blockquote><p>它的默认值为auto，即项目的本来大小。<br>flex-basis不是宽度或者高度,主轴是横向时他为宽度  主轴为竖向时他为高度<br>如果同时设置的有宽高，那么他的优先级高。</p></blockquote><h3 id="flex-flex属性是flex-grow-flex-shrink-和-flex-basis的简写，默认值为0-1-auto。后两个属性可选。"><a href="#flex-flex属性是flex-grow-flex-shrink-和-flex-basis的简写，默认值为0-1-auto。后两个属性可选。" class="headerlink" title="flex flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。"></a>flex flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">flex-grow</span>:<span class="hljs-number">1</span>;<br><span class="hljs-attribute">flex-shrink</span>:<span class="hljs-number">1</span>;<br><span class="hljs-attribute">flex-basis</span>:auto;<br><br>可以写成一句<br><span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span> <span class="hljs-number">1</span> auto;<br><br><br></code></pre></td></tr></table></figure><h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><blockquote><p>用于让个别项目拥有与其它项目不同的对齐方式，各值的表现与父容器的align-items属性完全一致。<br>表示继承父容器的align-items属性。如果没父元素，则默认stretch。</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/12/24/hello-world/"/>
    <url>/2020/12/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
