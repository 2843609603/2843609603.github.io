<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Vue组件</title>
    <link href="/2021/01/11/%E7%BB%84%E4%BB%B6/"/>
    <url>/2021/01/11/%E7%BB%84%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="组件化是大势所趋"><a href="#组件化是大势所趋" class="headerlink" title="组件化是大势所趋"></a>组件化是大势所趋</h2><p>随着业务复杂度的不断攀升，代码越来越难以维护，特别是我们的前端开发，一直以来html功能是缺失的，所以组件化开发应运而生。<br>我们可以把组件化开发想象成自己组装电脑，现在我们不需要专业的知识就可以自己DIY出自己心仪的一套电脑装备，如果某个部件坏了或者需要升级迭代了，自己去京东淘宝买回来自己装就行了。</p><p>组件开发的本质：一个函数,他封装可重用的HTML代码,还可以加一些功能(如点击事件等),我们可以将组件看作自定义的HTML元素。</p><h2 id="建个组件试试"><a href="#建个组件试试" class="headerlink" title="建个组件试试"></a>建个组件试试</h2><h3 id="全局组件"><a href="#全局组件" class="headerlink" title="全局组件"></a>全局组件</h3><blockquote><p>全局组件的优势是可以在Vue实例里自由调用而不需要额外引入</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br>JS:  建立一个叫test的组件  <br>Vue.component(&#x27;test&#x27;,&#123;<br>template:&#x27;<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Vue 我来了,任凭风暴漩涡<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>&#x27;<br>&#125;)<br><br><br>HTML里直接调用 <br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;home&quot;</span>&gt;</span><br>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">test</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">test</span>&gt;</span><br><br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>但是咱们都知道的,不上cli发挥不出来vue的能力。<br>如果是使用cli创建项目的话,步骤如下:</p><ol><li>在components文件夹下边建立List.vue  内容如下</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;p&gt;&#123;&#123; title &#125;&#125;&lt;/p&gt;<br>&lt;/div&gt;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">return</span> &#123;<br>title: <span class="hljs-string">&#x27;文章列表&#x27;</span><br>&#125;;<br>&#125;,<br>methods:&#123;<br>&#125;<br>&#125;;<br><br><br></code></pre></td></tr></table></figure><ol start="2"><li>然后在适当的位置引入  如main.js</li></ol><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br><br><span class="hljs-comment">//  @代指src   来自webpack的配置</span><br><span class="hljs-keyword">import</span> List <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/List.vue&#x27;</span><br>Vue.component(<span class="hljs-string">&#x27;List&#x27;</span>,List)<br><br></code></pre></td></tr></table></figure><h3 id="局部组件-假如在Home页引入"><a href="#局部组件-假如在Home页引入" class="headerlink" title="局部组件  假如在Home页引入"></a>局部组件  假如在Home页引入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">Home.vue<br><br><span class="hljs-keyword">import</span> List <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/List.vue&#x27;</span><br><br><span class="hljs-comment">//在组件里</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  name: <span class="hljs-string">&#x27;Home&#x27;</span>,<br>  components: &#123;<br>    List:List<br>  &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h3 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h3><ul><li>组件里的的选项和new Vue是一样的,如data、computed、watch、methods 以及生命周期钩子等,仅有的例外是像el 这样根实例特有的选项。</li><li>组件必须有根节点（Vue3可不需要）</li><li>data选项 必须是个函数（因为组件可复用，使用函数把他们解耦开）</li></ul><p>vue组件里常用的属性：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">return</span> &#123;&#125;;<br>&#125;,<br>components: &#123;<br><span class="hljs-comment">//这个是注册组件的地方,引入其他组件后在这里注册</span><br><span class="hljs-comment">// 注册后可以在template里调用了，调用就成了该组件的子组件</span><br>&#125;,<br>props: &#123;<br><span class="hljs-comment">//接收父组件的传值</span><br>&#125;,<br>computed: &#123;<br><span class="hljs-comment">//计算属性</span><br>&#125;,<br>watch: &#123;<br>  <span class="hljs-comment">//监控属性</span><br>&#125;,<br>methods: &#123;<br><span class="hljs-comment">//这里放各种方法</span><br>&#125;,<br><span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-comment">//创建后</span><br>&#125;,<br><span class="hljs-function"><span class="hljs-title">mounted</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-comment">//挂载后</span><br>&#125;<br>&#125;;<br><br></code></pre></td></tr></table></figure><h2 id="组件通信"><a href="#组件通信" class="headerlink" title="组件通信"></a>组件通信</h2><blockquote><p>组件通信,也就是组件传值,这是组件开发最常遇到的问题。常见的有父传子，子传父，非父子关系间的传递</p></blockquote><h3 id="前置准备，我们搞一个父子关系的组件出来"><a href="#前置准备，我们搞一个父子关系的组件出来" class="headerlink" title="前置准备，我们搞一个父子关系的组件出来"></a>前置准备，我们搞一个父子关系的组件出来</h3><p>我们把上边的例子加点内容 然后弄成父子组件形式</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-comment">//1. 为List组件添加点内容</span><br><span class="hljs-params">&lt;div class=&quot;content&quot;&gt;</span><br><span class="hljs-params">&lt;p&gt;</span>文章列表<span class="hljs-params">&lt;/p&gt;</span><br><br><br><span class="hljs-params">&lt;!-- 新添加的内容 --&gt;</span><br><span class="hljs-params">&lt;div class=&quot;article&quot;&gt;</span><br><span class="hljs-params">&lt;h3&gt;</span>特朗普推特账号被“永久封停”，“谢谢你推特”迅速冲上热搜！<span class="hljs-params">&lt;/h3&gt;</span><br><span class="hljs-params">&lt;div class=&quot;bottom&quot;&gt;</span><br><span class="hljs-params">&lt;div&gt;</span><br><span class="hljs-params">&lt;span class=&quot;hot&quot;&gt;</span>热点<span class="hljs-params">&lt;/span&gt;</span><br><span class="hljs-params">&lt;span class=&quot;time&quot;&gt;</span><span class="hljs-number">01</span><span class="hljs-number">-09</span> <span class="hljs-number">15</span>:<span class="hljs-number">34</span><span class="hljs-params">&lt;/span&gt;</span><br><span class="hljs-params">&lt;/div&gt;</span><br><span class="hljs-params">&lt;div class=&quot;del&quot;&gt;</span>X<span class="hljs-params">&lt;/div&gt;</span><br><span class="hljs-params">&lt;/div&gt;</span><br><span class="hljs-params">&lt;/div&gt;</span><br><br><br><br><span class="hljs-params">&lt;/div&gt;</span><br><br><span class="hljs-comment">//scss</span><br>.content&#123;<br><br><span class="hljs-symbol">width:</span> <span class="hljs-number">500</span>px;<br><span class="hljs-symbol">margin:</span> <span class="hljs-number">0</span> auto;<br>&#125;<br><br>.<span class="hljs-class">article </span>&#123;<br><span class="hljs-symbol">display:</span> flex;<br>flex-flow: row wrap;<br>justify-content: space-between;<br>align-items: center;<br><span class="hljs-symbol">border:</span> <span class="hljs-number">1</span>px solid <span class="hljs-meta">#f00;</span><br><span class="hljs-class">h3 </span>&#123;<br><span class="hljs-symbol">width:</span> <span class="hljs-number">100</span>%;<br>&#125;<br><br>.<span class="hljs-class">bottom </span>&#123;<br><span class="hljs-symbol">display:</span> flex;<br><span class="hljs-symbol">width:</span> <span class="hljs-number">100</span>%;<br>align-items: center;<br><span class="hljs-symbol">height:</span> <span class="hljs-number">30</span>px;<br>justify-content: space-between;<br>&#125;<br>.<span class="hljs-class">hot </span>&#123;<br><span class="hljs-symbol">color:</span> <span class="hljs-meta">#f00;</span><br>&#125;<br>.<span class="hljs-class">time </span>&#123;<br><span class="hljs-symbol">color:</span> <span class="hljs-meta">#999;</span><br>margin-left: <span class="hljs-number">5</span>px;<br>&#125;<br>.del&#123;<br><span class="hljs-symbol">width:</span> <span class="hljs-number">30</span>px;<br><span class="hljs-symbol">height:</span> <span class="hljs-number">30</span>px;<br><br>&#125;<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure><p>我们把div.article内的内容封装成子组件  起名ListItem </p><ol><li>在components文件夹下创建ListItem文件 </li><li>把.article的html放过去 css放过去</li><li>在List组件里引入ListItem 他们形成了父子组件的关系</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br>&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;p&gt;&#123;&#123; title &#125;&#125;&lt;/p&gt;<br>&lt;ListItem &gt;&lt;/ListItem&gt;  <br>&lt;/div&gt;<br><br><br><span class="hljs-keyword">import</span> ListItem <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/ListItem.vue&#x27;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">return</span> &#123;<br>title: <span class="hljs-string">&#x27;文章列表&#x27;</span><br>&#125;;<br>&#125;,<br>components: &#123;<br>ListItem  <br>&#125;,<br>methods:&#123;<br><br>&#125;<br>&#125;;<br><br></code></pre></td></tr></table></figure><h3 id="父传子-props"><a href="#父传子-props" class="headerlink" title="父传子 props"></a>父传子 props</h3><h4 id="在调用组件的地方传递参数"><a href="#在调用组件的地方传递参数" class="headerlink" title="在调用组件的地方传递参数"></a>在调用组件的地方传递参数</h4><blockquote><p>我们在List里获取数据，然后传递给子组件ListItem</p></blockquote><p>父组件代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;p&gt;&#123;&#123; title &#125;&#125;&lt;/p&gt;<br>&lt;ListItem :articleList=<span class="hljs-string">&quot;articleList&quot;</span>  &gt;&lt;/ListItem&gt;<br>&lt;/div&gt;<br> <br> <br> JS:<br><span class="hljs-keyword">import</span> ListItem <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/ListItem.vue&#x27;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">return</span> &#123;<br>title: <span class="hljs-string">&#x27;文章列表&#x27;</span>,<br>articleList:[&#123;<br>title:<span class="hljs-string">&quot;河北石家庄：将尽快启动并完成第二轮全员核酸检测&quot;</span>,<br>is_hot:<span class="hljs-number">1</span>,<br>time:<span class="hljs-string">&quot;01-09 15:34&quot;</span><br>&#125;,&#123;<br>title:<span class="hljs-string">&quot;特朗普推特账号被“永久封停”，“谢谢你推特”迅速冲上热搜！&quot;</span>,<br>is_hot:<span class="hljs-number">1</span>,<br>time:<span class="hljs-string">&quot;01-09 10:27&quot;</span><br>&#125;]<br>&#125;;<br>&#125;,<br>components: &#123;<br>ListItem<br>&#125;,<br>methods:&#123;<br>&#125;<br>&#125;;<br> <br></code></pre></td></tr></table></figure><h4 id="子组件"><a href="#子组件" class="headerlink" title="子组件"></a>子组件</h4><ol><li>props获取数据 articleList</li><li>渲染这个数据</li></ol><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;article&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item, index) in articleList&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">item.title</span> &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hot&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;item.is_hot == 1&quot;</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">item.is_hot</span> ? <span class="hljs-string">&#x27;热点&#x27;</span> : <span class="hljs-string">&#x27;&#x27;</span> &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;time&quot;</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">item.time</span> &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;del&quot;</span> &gt;</span>X<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">export default &#123;</span><br><span class="xml">data() &#123;</span><br><span class="xml">return &#123;&#125;;</span><br><span class="xml">&#125;,</span><br><span class="xml">props: [&#x27;articleList&#x27;], //写法1</span><br><span class="xml"></span><br><span class="xml">//写法2</span><br><span class="xml">props:&#123;</span><br><span class="xml">articleList:&#123;</span><br><span class="xml">type:Array,</span><br><span class="xml">required:true,</span><br><span class="xml">default:()=&gt;[],</span><br><span class="xml">validator(val)&#123;</span><br><span class="xml">console.log(val) //这个val就是数据</span><br><span class="xml">return Array.isArray(val)</span><br><span class="xml">&#125;</span><br><span class="xml">&#125;</span><br><span class="xml">&#125;,</span><br><span class="xml">methods: &#123;</span><br><span class="xml">&#125;</span><br><span class="xml">&#125;;</span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br><br><br></code></pre></td></tr></table></figure><ul><li>props可以设置规则如果不满足规则会返回警告,规则有4，详情如下</li></ul><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs livescript">type (规定数据类型)<br><span class="hljs-built_in">String</span> 字符串<br><span class="hljs-built_in">Number</span> 数字<br><span class="hljs-built_in">Boolean</span> 布尔<br><span class="hljs-built_in">Array</span> 数组 <br><span class="hljs-built_in">Object</span> 对象<br><span class="hljs-built_in">Date</span> 日期<br><span class="hljs-built_in">Function</span> 函数<br><span class="hljs-built_in">Symbol</span> 独一无二的值(es6)<br><br><br><span class="hljs-keyword">default</span> : (默认值)<br>基础数据类型: 直接赋值<br>对象数据类型: 用函数赋值 ()=&gt;[]<br><br>required: (必填项)  默认为<span class="hljs-literal">false</span>,说明父级必须传入,否则会报错<br><br>validator: 校验(验证传入的值是否符合规定)<br></code></pre></td></tr></table></figure><ul><li>注意事项 ：1.data里属性名字不要和props里的属性重名,如果重名会报警告以props为主。 2.不要在子组件里改props的值</li></ul><h2 id="子传父-emit"><a href="#子传父-emit" class="headerlink" title="子传父 $emit"></a>子传父 $emit</h2><blockquote><p>子组件用$emit触发事件，父组件用v-on接收</p></blockquote><p>场景： 现在需要做删除功能，点击X能删掉当前消息,所以我们为X加个点击事件：代码如下</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&lt;div <span class="hljs-keyword">class</span>=&quot;<span class="hljs-symbol">del</span>&quot; @<span class="hljs-symbol">click</span>=&quot;<span class="hljs-symbol">del</span>(<span class="hljs-symbol">index</span>)&quot;&gt;<span class="hljs-symbol">X</span>&lt;/<span class="hljs-symbol">div</span>&gt;<br><br><br><span class="hljs-symbol">JS:</span><br><span class="hljs-symbol">methods: </span>&#123;<br>del(index)&#123;<br><br><span class="hljs-keyword">this</span>.articleList.splice(index,<span class="hljs-number">1</span>)<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>但是：VUE规定尽量不要在子组件里修改props数据,这就是单项数据流的概念,所以我们得改一下</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">JS:<br>methods: &#123;<br>del(index)&#123;<br><br><span class="hljs-regexp">//</span>this.articleList.splice(index,<span class="hljs-number">1</span>) <span class="hljs-regexp">//</span>错误示范<br>this.<span class="hljs-variable">$emit</span>(<span class="hljs-string">&#x27;delItem&#x27;</span>,index) <span class="hljs-regexp">//</span>正确示范  <br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>上边的代码我们$emit一个delItem事件,顺便传递一个数据index  </p><p>下边需要父组件拿到这个数据了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//父组件</span><br><br><span class="hljs-comment">//@delItem=&quot;parentDelItem&quot;  </span><br><span class="hljs-comment">//delItem对应刚才的$emit  </span><br><span class="hljs-comment">//parentDelItem是父组件里的事件名字 叫啥都行</span><br><br>&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;p&gt;&#123;&#123; title &#125;&#125;&lt;/p&gt;<br>&lt;ListItem :articleList=<span class="hljs-string">&quot;articleList&quot;</span>  @delItem=<span class="hljs-string">&quot;parentDelItem&quot;</span>&gt;&lt;/ListItem&gt;<br>&lt;/div&gt;<br><br><br><br>JS:<br>methods:&#123;<br><span class="hljs-function"><span class="hljs-title">parentDelItem</span>(<span class="hljs-params">index</span>)</span>&#123;<br><span class="hljs-built_in">this</span>.articleList.splice(index,<span class="hljs-number">1</span>)<br>&#125;<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure><h2 id="parent"><a href="#parent" class="headerlink" title="$parent"></a>$parent</h2><blockquote><p>可以在子组件里获取父组件实例   </p></blockquote><blockquote><p>所以刚才的$emit方法太繁琐,我么可以这样</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">del(index) &#123;<br><span class="hljs-regexp">//</span> this.articleList.splice(index,<span class="hljs-number">1</span>)<br><span class="hljs-regexp">//</span> this.<span class="hljs-variable">$emit</span>(<span class="hljs-string">&#x27;delItem&#x27;</span>,index)<br>this.<span class="hljs-variable">$parent</span>.parentDelItem(index);<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="children"><a href="#children" class="headerlink" title="$children"></a>$children</h2><blockquote><p>可以在父组件里获取子组件实例   他返回一个数组,然后我么可以用索引找到对象的子组件</p></blockquote><blockquote><p>场景：现在在父组件加一个字体大小变化的功能   </p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//子组件设置一个fontSize</span><br><br>&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;article&quot;</span> v-<span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;(item, index) in articleList&quot;</span> :key=<span class="hljs-string">&quot;index&quot;</span> <br>:style=<span class="hljs-string">&quot;&#123;fontSize:fontSize+&#x27;px&#x27;&#125;&quot;</span>&gt;<br><br>&lt;/div&gt;<br><br><br><span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">return</span> &#123;<br>fontSize:<span class="hljs-number">14</span><br>&#125;;<br>&#125;,<br><br></code></pre></td></tr></table></figure><p>子组件代码如下</p><p>核心是：点击按钮  让parentFontSize大小变化  然后控制子组件，让他的fontSize和父级的parentFontSize一样</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">title</span> &#125;&#125;</span><span class="xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;reduce&quot;</span>&gt;</span>-<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">parentFontSize</span>&#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;add&quot;</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">ListItem</span> <span class="hljs-attr">:articleList</span>=<span class="hljs-string">&quot;articleList&quot;</span>  @<span class="hljs-attr">delItem</span>=<span class="hljs-string">&quot;parentDelItem&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ListItem</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">import ListItem from &#x27;@/components/ListItem.vue&#x27;;</span><br><span class="xml">export default &#123;</span><br><span class="xml">data() &#123;</span><br><span class="xml">return &#123;</span><br><span class="xml">title: &#x27;文章列表&#x27;,</span><br><span class="xml">parentFontSize:14,   //父级设置个字体</span><br><span class="xml">articleList:[&#123;</span><br><span class="xml">title:&quot;河北石家庄：将尽快启动并完成第二轮全员核酸检测&quot;,</span><br><span class="xml">is_hot:1,</span><br><span class="xml">time:&quot;01-09 15:34&quot;</span><br><span class="xml">&#125;,&#123;</span><br><span class="xml">title:&quot;特朗普推特账号被“永久封停”，“谢谢你推特”迅速冲上热搜！&quot;,</span><br><span class="xml">is_hot:1,</span><br><span class="xml">time:&quot;01-09 10:27&quot;</span><br><span class="xml">&#125;]</span><br><span class="xml">&#125;;</span><br><span class="xml">&#125;,</span><br><span class="xml">components: &#123;</span><br><span class="xml">ListItem</span><br><span class="xml">&#125;,</span><br><span class="xml">methods:&#123;</span><br><span class="xml">parentDelItem(index)&#123;</span><br><span class="xml">this.articleList.splice(index,1)</span><br><span class="xml">&#125;,</span><br><span class="xml">reduce()&#123;</span><br><span class="xml">this.parentFontSize --;</span><br><span class="xml">this.$children[0].fontSize = this.parentFontSize</span><br><span class="xml">&#125;,</span><br><span class="xml">add()&#123;</span><br><span class="xml">this.parentFontSize ++;</span><br><span class="xml">this.$children[0].fontSize = this.parentFontSize</span><br><span class="xml">&#125;</span><br><span class="xml">&#125;</span><br><span class="xml">&#125;;</span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br><br></code></pre></td></tr></table></figure><h2 id="refs"><a href="#refs" class="headerlink" title="$refs"></a>$refs</h2><blockquote><p>可以获取子组件实例  然后可以获取和修改其中的数据</p></blockquote><ol><li>在组件上加ref属性，并设置一个名字</li><li>用this.$refs.名字 获取到组件实例</li></ol><p>所以刚才的$children方法我们可以改成$refs实现：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">&lt;ListItem ref=<span class="hljs-string">&quot;ListItem&quot;</span> :articleList=<span class="hljs-string">&quot;articleList&quot;</span>  <span class="hljs-meta">@delItem</span>=<span class="hljs-string">&quot;parentDelItem&quot;</span>&gt;&lt;/ListItem&gt;<br><br>JS:<br><br>reduce()&#123;<br><span class="hljs-keyword">this</span>.parentFontSize --;<br><span class="hljs-keyword">this</span>.$refs.ListItem.fontSize = <span class="hljs-keyword">this</span>.parentFontSize<br>&#125;,<br>add()&#123;<br><span class="hljs-keyword">this</span>.parentFontSize ++;<br><span class="hljs-keyword">this</span>.$refs.ListItem.fontSize = <span class="hljs-keyword">this</span>.parentFontSize<br>&#125;<br><br><br></code></pre></td></tr></table></figure><blockquote><p>$parent/$children/$refs不但能获取数据,修改数据,还可以调用方法</p></blockquote><blockquote><p>$parent/$children官方不是十分推荐  正常大家还是用props event方式</p></blockquote><hr><hr><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><h3 id="说明：下边几种方法不太常用-如果你已经数熟练掌握了props和-emit的传参方式-那推荐你随便把下边几种也掌握-事实上就是props和event的变种-否则-先把props和-emit搞定-下边几种做以了解就好-以免给自己增加太多的心智负担。"><a href="#说明：下边几种方法不太常用-如果你已经数熟练掌握了props和-emit的传参方式-那推荐你随便把下边几种也掌握-事实上就是props和event的变种-否则-先把props和-emit搞定-下边几种做以了解就好-以免给自己增加太多的心智负担。" class="headerlink" title="说明：下边几种方法不太常用,如果你已经数熟练掌握了props和$emit的传参方式,那推荐你随便把下边几种也掌握(事实上就是props和event的变种);否则,先把props和$emit搞定,下边几种做以了解就好,以免给自己增加太多的心智负担。"></a>说明：下边几种方法不太常用,如果你已经数熟练掌握了props和$emit的传参方式,那推荐你随便把下边几种也掌握(事实上就是props和event的变种);否则,先把props和$emit搞定,下边几种做以了解就好,以免给自己增加太多的心智负担。</h3><h2 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h2><ol><li><p>v-mode1不但可以加在表单元素上,也可以加在组件上，他其实就是@input 和 :value的结合</p></li><li><p>组件里的v-mode1其实就是一个语法糖，默认会利用名为value的props和名为input的event。</p></li><li><p>可以用model选项为value和input改名</p></li><li><p>v-model最适合的场景：跨组件双向数据绑定</p></li><li><p>说得再直白点，v-model和原来的正常的$emit 那种方式一样，只是把多句话简化为了一句</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//在ListItem里加如下结构</span><br><br>&lt;div&gt;<br>&lt;input type=<span class="hljs-string">&quot;text&quot;</span> :value=<span class="hljs-string">&quot;fontSize&quot;</span> @input=<span class="hljs-string">&quot;send&quot;</span>&gt;<br>&lt;/div&gt;<br><br>JS：<br>model:&#123;<br>event:<span class="hljs-string">&quot;fontChange&quot;</span><br>&#125;,<br>methods: &#123;<br><span class="hljs-function"><span class="hljs-title">send</span>(<span class="hljs-params">e</span>)</span>&#123;<br><br><span class="hljs-keyword">let</span> fontSize = e.target.value;<br><br><span class="hljs-built_in">this</span>.fontSize = fontSize<br><span class="hljs-built_in">this</span>.$emit(<span class="hljs-string">&#x27;fontChange&#x27;</span>,fontSize)<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//当我们输入时,触发了send事件    fontSize随之改变</span><br><span class="hljs-comment">//同时用$emit把改变后的值发给父级  事件名默认input  可以使用model选项修改</span><br><br><br></code></pre></td></tr></table></figure><p>子组件触发了fontChange事件  按照原来的套路 我们得这么写来接收数据</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs d"><br>&lt;ListItem <span class="hljs-keyword">ref</span>=<span class="hljs-string">&quot;ListItem&quot;</span> :articleList=<span class="hljs-string">&quot;articleList&quot;</span><br> <span class="hljs-keyword">@delItem</span>=<span class="hljs-string">&quot;parentDelItem&quot;</span>  <br> <span class="hljs-keyword">@fontChange</span>=<span class="hljs-string">&quot;fontChange&quot;</span><br> &gt;&lt;/ListItem&gt;<br> <br> <br> JS:<br> <br>fontChange(size)&#123;<br><span class="hljs-keyword">this</span>.parentFontSize = size<br>&#125; <br><br>--- 以上代码可以简化为 <br><br>&lt;ListItem <span class="hljs-keyword">ref</span>=<span class="hljs-string">&quot;ListItem&quot;</span> :articleList=<span class="hljs-string">&quot;articleList&quot;</span><br> <span class="hljs-keyword">@delItem</span>=<span class="hljs-string">&quot;parentDelItem&quot;</span>  <br> v-model=<span class="hljs-string">&quot;parentFontSize&quot;</span><br> &gt;&lt;/ListItem&gt;<br><br>   <br>JS：<br>删掉fontChange事件<br> <br><br></code></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>子组件那改成input事件 <code>this.$emit(&#39;input&#39;,msg)  </code> 可以用model为他改名</li><li>父组件用v-model监控和接收 <code> v-model=&quot;parentFontSize&quot;</code> </li><li>这其实可以理解为 v-model监控子组件事件触发，触发后把接来的参数赋值给定义的参数（这里是parentFontSize）</li></ol><h2 id="sync"><a href="#sync" class="headerlink" title="sync"></a>sync</h2><blockquote><p>场景1： 父组件无需定义监听事件来接收数据</p></blockquote><blockquote><p>场景2：想需要对一个 prop 进行双向绑定。</p></blockquote><blockquote><p>这种方式最为简洁</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>子组件在事件名前边加上update:<br>send(e)&#123;<br><br>let fontSize = e.target.value;<br>this.fontSize = fontSize;<br><br><span class="hljs-regexp">//</span> this.<span class="hljs-variable">$emit</span>(<span class="hljs-string">&#x27;fontChange&#x27;</span>,fontSize)<br>this.<span class="hljs-variable">$emit</span>(<span class="hljs-string">&#x27;update:fontChange&#x27;</span>,fontSize)<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs d"><span class="hljs-comment">//父组件</span><br>&lt;ListItem <span class="hljs-keyword">ref</span>=<span class="hljs-string">&quot;ListItem&quot;</span> :articleList=<span class="hljs-string">&quot;articleList&quot;</span><br> <span class="hljs-keyword">@delItem</span>=<span class="hljs-string">&quot;parentDelItem&quot;</span>  <br> :fontChange.sync=<span class="hljs-string">&quot;parentFontSize&quot;</span><br> &gt;&lt;/ListItem&gt;<br><br></code></pre></td></tr></table></figure><h2 id="provide-inject"><a href="#provide-inject" class="headerlink" title="provide/inject"></a>provide/inject</h2><blockquote><p>场景  需要给多层级后代组件传参 provide传递的数据， 不仅所有子组件都可以接收，所有后代组件均可以通过inject接收到</p></blockquote><ul><li>provide     和data属性类似     </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span>&#123;<br> <span class="hljs-keyword">return</span>&#123;<br>  age:<span class="hljs-number">20</span>,<br>  aa:<span class="hljs-string">&#x27;&#x27;</span>,<br>  text:<span class="hljs-string">&#x27;这是父级属性&#x27;</span><br> &#125;<br> <br>&#125;,<br><span class="hljs-function"><span class="hljs-title">provide</span>(<span class="hljs-params"></span>)</span>&#123;<br> <span class="hljs-keyword">return</span>&#123;<br>   text:<span class="hljs-string">&#x27;这是父级属性&#x27;</span><br> &#125;<br> <br>&#125;,<br><br></code></pre></td></tr></table></figure><ul><li>inject   和props类似</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-attribute">inject</span>:[<span class="hljs-string">&#x27;text&#x27;</span>], <span class="hljs-comment">//接收方式1</span><br><span class="hljs-attribute">inject</span>:&#123; <span class="hljs-comment">//方式2</span><br><span class="hljs-attribute">text</span>:&#123;<br><span class="hljs-attribute">type</span>:String<br>&#125;<br><br>&#125;,<br><br></code></pre></td></tr></table></figure><h2 id="props-attrs-listeners"><a href="#props-attrs-listeners" class="headerlink" title="$props/$attrs/$listeners"></a>$props/$attrs/$listeners</h2><ul><li>$props：当前组件接收到的 props 对象。Vue 实例代理了对其 props 对象属性的访问。</li><li>$attrs：包含了父作用域中不作为 prop 被识别 (且获取) 的特性绑定 (class 和 style 除外)。也就是props没收的他来收。</li><li>$listeners：包含了父作用域中的 (不含 .native 修饰器的) v-on 事件监听器</li></ul><h3 id="场景-父组件传给子组件的子组件时-中间组件周转太麻烦，这个为了简化操作的"><a href="#场景-父组件传给子组件的子组件时-中间组件周转太麻烦，这个为了简化操作的" class="headerlink" title="场景  父组件传给子组件的子组件时  中间组件周转太麻烦，这个为了简化操作的"></a>场景  父组件传给子组件的子组件时  中间组件周转太麻烦，这个为了简化操作的</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br><span class="hljs-regexp">//</span>父组件给子组件 child-dom传一个name和age<br>    &lt;child-dom<br>      name=<span class="hljs-string">&quot;小王&quot;</span><br>      age=<span class="hljs-string">&quot;20&quot;</span><br>     &gt;<br>     &lt;/child-dom&gt;<br> <br><br><br><span class="hljs-regexp">//</span>子组件<br><br>&lt;div&gt;<br>&#123;&#123;<span class="hljs-variable">$attrs</span>[<span class="hljs-string">&#x27;age&#x27;</span>]&#125;&#125;  <span class="hljs-regexp">//</span>age进了<span class="hljs-variable">$attrs</span>里<br><br>&#123;&#123;<span class="hljs-variable">$props</span>[<span class="hljs-string">&#x27;name&#x27;</span>]&#125;&#125; <span class="hljs-regexp">//</span>name在props里<br><br><br><span class="hljs-regexp">//</span>关键点来了<br><br><span class="hljs-regexp">//</span>孙 组件  <br><span class="hljs-regexp">//</span> 直接这么传简化了操作<br><span class="hljs-regexp">//</span> v-bind=<span class="hljs-string">&quot;$attrs&quot;</span> 把爷组件的值传给孙<br><span class="hljs-regexp">//</span>  v-on=<span class="hljs-string">&quot;$listeners&quot;</span>  把爷组件的监控发给孙    <br>&lt;child_child v-bind=<span class="hljs-string">&quot;$attrs&quot;</span>    v-on=<span class="hljs-string">&quot;$listeners&quot;</span>&gt;&lt;/child_child&gt;<br><br><br><br>&lt;div&gt;<br>props:[<span class="hljs-string">&#x27;name&#x27;</span>]  <span class="hljs-regexp">//</span>只接受了name<br><br><br><br><span class="hljs-regexp">//</span>孙组件<br><br>&lt;div&gt;<br><br> &lt;button @click=<span class="hljs-string">&quot;send&quot;</span>&gt;我要发射火箭&lt;/button&gt;<br> &lt;/div&gt;<br><br><br> send()&#123;<br><span class="hljs-regexp">//</span>直接传给爷爷<br> this.<span class="hljs-variable">$emit</span>(<span class="hljs-string">&quot;upRocket&quot;</span>);<br><br> &#125;<br> <br> <br><br></code></pre></td></tr></table></figure><hr><hr><h2 id="slot-插槽"><a href="#slot-插槽" class="headerlink" title="slot 插槽"></a>slot 插槽</h2><ol><li>插槽是Vue组件的一种机制，它允许你以一种不同于严格的父子关系的方式组合组件。</li><li>插槽为你提供了一个将内容放置到新位置或使组件更通用的出口。</li></ol><p>说点咱们正常人类能听到得人话：<strong>props传递的数据,slot插槽传递的是html</strong></p><p>咱们用刚才的List组件做例子  假如title是父级传来的</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">Home.vue</span><br><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">List</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文章列表&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">List</span>&gt;</span></span><br><br><br><span class="xml">List.vue</span><br><br><span class="xml">   <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">title</span> &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml">   props:[&#x27;title&#x27;],//接收</span><br><br></code></pre></td></tr></table></figure><p>这样的作法是OK的，但是咱们说了组件的目的是方便复用，假如另一个页面——热门活动 也想用List组件，但是他的title得是个h1标签，字体也得是红色,按照新需求,修改代码如下</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;title==&#x27;文章列表&#x27;&quot;</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">title</span> &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;title==&#x27;热门活动&#x27;&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #FF0000;&quot;</span>&gt;</span></span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">title</span> &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure><p>功能实现了,但是咱们也感觉到了,这么写有点笨~  假如还有居中,加icon等需求,那我们的代码还得改。</p><p>怎么办呢? 聪明的你是不是想到了咱们vue第一课就学习的v-html指令了呢,我们做如下修改</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs xquery">Home.vue<br><br> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span></span><br><span class="xml">   </span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;home&quot;</span>&gt;</span></span><br><span class="xml">   </span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">List</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">List</span>&gt;</span></span><br><span class="xml">   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"> <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br>JS:<br>  data()&#123;<br>  <span class="hljs-keyword">return</span>&#123;<br>  title:`<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #FF0000;&quot;</span>&gt;</span>热门活动<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span>`,<br>  title2:`<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>文章列表<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span>`<br>  &#125;<br>  <br>  &#125;<br>  <br> <br>List.vue <br>   <br> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span></span><br><span class="xml"> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><br><br></code></pre></td></tr></table></figure><p>以上，咱们用v-html解决问题了,感觉还不错，但是不够优雅,也不够灵活,为此官方除了slot插槽,帮助我们解决这个问题。</p><p>看一下插槽怎么做：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml">Home.vue <br>把要分发的内容放到组件里<br>  <span class="hljs-tag">&lt;<span class="hljs-name">List</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #FF0000;&quot;</span>&gt;</span>热门活动<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span> <br>  <span class="hljs-tag">&lt;/<span class="hljs-name">List</span>&gt;</span><br>  <br>  <br> List.vue  <br>  <br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: 1px solid forestgreen;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ListItem</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;ListItem&quot;</span> <span class="hljs-attr">:articleList</span>=<span class="hljs-string">&quot;articleList&quot;</span></span><br><span class="hljs-tag"> @<span class="hljs-attr">delItem</span>=<span class="hljs-string">&quot;parentDelItem&quot;</span>  </span><br><span class="hljs-tag"> <span class="hljs-attr">:fontChange.sync</span>=<span class="hljs-string">&quot;parentFontSize&quot;</span></span><br><span class="hljs-tag"> <span class="hljs-attr">attr1</span>=<span class="hljs-string">&quot;1111&quot;</span></span><br><span class="hljs-tag"> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ListItem</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br></code></pre></td></tr></table></figure><blockquote><p>所以插槽还有刚才的$props/$attrs/$listeners provide/inject   .sync  v-model都是为了更好的解决问题   如同我们地锅烧柴就可以把饭做出来，为何还发明燃气,电池炉，微波炉，烤箱,电饼铛等等 的道理一样。</p></blockquote><h3 id="上边咱们了解了slot是干啥的了就好办了，下边是一些附带概念"><a href="#上边咱们了解了slot是干啥的了就好办了，下边是一些附带概念" class="headerlink" title="上边咱们了解了slot是干啥的了就好办了，下边是一些附带概念:"></a>上边咱们了解了slot是干啥的了就好办了，下边是一些附带概念:</h3><ol><li>按照官方推荐的最新的统一写法,插槽内容应该写到template标签内,这样更规范，语义化也更好了。template是一个虚拟节点，并不会被渲染。</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"> <span class="hljs-tag">&lt;<span class="hljs-name">List</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #FF0000;&quot;</span>&gt;</span>热门活动<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">List</span>&gt;</span><br><br></code></pre></td></tr></table></figure><ol start="2"><li>slot可以起名字(主要是为了区分多个插槽),起名字的插槽叫具名插槽。如果不起名字,vue会把所有不起名字的插槽放到一起，然后他们有个隐藏的名字: “default”</li></ol><blockquote><p>通过v-slot: 添加名字       在组件内部在slot标签上用name属性区分</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml">Home.vue<br>//刚才的写法和现在的结果一样<br><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:default</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #FF0000;&quot;</span>&gt;</span>热门活动<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br>List.vue<br><br><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;default&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>没内容时，我显示<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>我们再加个名字叫time的slot </p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml">Home.vue<br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;home&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">List</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:default</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #FF0000;&quot;</span>&gt;</span>热门活动<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:time</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><br>2021-1-12<br><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">List</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br></code></pre></td></tr></table></figure><ol start="3"><li>v-slot 可以简写为#</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">default</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #FF0000;&quot;</span>&gt;</span>热门活动<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">time</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span><br>2021-1-12<br><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br></code></pre></td></tr></table></figure><ol start="4"><li>slot默认值,如果刚才List组件里啥也没传  那显示默认内容</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml">        <span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>没内容时，我显示<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="5"><li>作用域插槽  让插槽内容可以获取子组件的内容</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript">List.vue<br><span class="hljs-comment">//传递一个author属性   </span><br><br>&lt;slot name=<span class="hljs-string">&quot;time&quot;</span> author=<span class="hljs-string">&quot;小刘&quot;</span>&gt;&lt;/slot&gt;<br><br><span class="hljs-comment">//或者  传数据形式</span><br><br>&lt;slot name=<span class="hljs-string">&quot;time&quot;</span> :author=<span class="hljs-string">&quot;author&quot;</span>&gt;&lt;/slot&gt;<br><br><br><span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">return</span> &#123;<br>author:<span class="hljs-string">&quot;小刘&quot;</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>然后在插槽那里可以获取到传来的author</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml">//这里的time_props是自定的  叫啥都行 </span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">time</span>=<span class="hljs-string">&quot;time_props&quot;</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml">2021-1-12</span><br><span class="xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">time_props.author</span>&#125;&#125;</span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">//还可以使用解构的方式</span><br><span class="xml"></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">time</span>=<span class="hljs-string">&quot;&#123;author&#125;&quot;</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml">2021-1-12</span><br><span class="xml"></span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">author</span>&#125;&#125;</span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="xml"></span><br><br></code></pre></td></tr></table></figure><h2 id="EventBus"><a href="#EventBus" class="headerlink" title="EventBus"></a>EventBus</h2><blockquote><p>任意两个组件之间传值可以用事件总线</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs awk">Vue.prototype.<span class="hljs-variable">$bus</span> = new Vue()<br><br><span class="hljs-regexp">//</span>在某个组件  合适的时机触发  比如点击事件<br>this.<span class="hljs-variable">$bus</span>.<span class="hljs-variable">$emit</span>(<span class="hljs-string">&#x27;bus&#x27;</span>,<span class="hljs-string">&#x27;给你传消息了，收到了吗&#x27;</span>)<br><br><br><span class="hljs-regexp">//</span>因为不知道什么时候收到，所以一般写到created或者mounted<br><br>mounted() &#123;<br><span class="hljs-regexp">//</span>挂载后<br>this.<span class="hljs-variable">$bus</span>.<span class="hljs-variable">$on</span>(<span class="hljs-string">&#x27;bus&#x27;</span>,<span class="hljs-keyword">function</span>(e)&#123;<br><br>console.log(e)<br>&#125;)<br><br>&#125;<br><br><br></code></pre></td></tr></table></figure><h2 id="vuex"><a href="#vuex" class="headerlink" title="vuex"></a>vuex</h2><p>VUE提供全局状态管理功能，可以理解为响应式的全局变量</p><h3 id="几个参数的含义"><a href="#几个参数的含义" class="headerlink" title="几个参数的含义"></a>几个参数的含义</h3><ol><li>state放数据</li><li>mutations  处理事件修改数据</li><li>actions 处理异步事件  最后再调用mutations修改数据</li></ol><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs pf">store/index.js<br><br><br>  <span class="hljs-keyword">state</span>: &#123;<br>  num:<span class="hljs-number">0</span><br>  &#125;,<br>  mutations: &#123;<br>  changenum(<span class="hljs-keyword">state</span>,num)&#123;<br>  <br>  <span class="hljs-keyword">state</span>.num = num<br>  &#125;<br>  &#125;,<br>  actions: &#123;<br>  <br>  later_changenum(&#123;commit,<span class="hljs-keyword">state</span>&#125;,num)&#123;<br>  <span class="hljs-built_in">set</span>Timeout(V=&gt;&#123;<br>  commit(&#x27;changenum&#x27;,num)<br>  &#125;,<span class="hljs-number">1000</span>)<br>  &#125;<br>  <br>  <br>  &#125;,<br><br><br></code></pre></td></tr></table></figure><ol><li>获取数据</li></ol><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pf">this.<span class="hljs-variable">$store</span>.<span class="hljs-keyword">state</span>.num<br><br></code></pre></td></tr></table></figure><ol start="2"><li>改数据</li></ol><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pf">let num = this.<span class="hljs-variable">$store</span>.<span class="hljs-keyword">state</span>.num;<br>this.<span class="hljs-variable">$store</span>.commit(&#x27;changenum&#x27;, ++num);<br><br></code></pre></td></tr></table></figure><ol start="3"><li>异步修改</li></ol><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pf">let num = this.<span class="hljs-variable">$store</span>.<span class="hljs-keyword">state</span>.num;<br>this.<span class="hljs-variable">$store</span>.dispatch(&#x27;later_changenum&#x27;, ++num);<br><br></code></pre></td></tr></table></figure><p>为了简化操作 可以引入map辅助函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; mapState, mapMutations, mapActions &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vuex&#x27;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-function"><span class="hljs-title">created</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-built_in">this</span>.$bus.$on(<span class="hljs-string">&#x27;bus&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) </span>&#123;<br><span class="hljs-built_in">console</span>.log(e);<br>&#125;);<br><br><span class="hljs-built_in">console</span>.log();<br>&#125;,<br><br>computed: &#123;<br>...mapState([<span class="hljs-string">&#x27;num&#x27;</span>])<br>&#125;,<br>methods: &#123;<br>...mapMutations([<span class="hljs-string">&#x27;changenum&#x27;</span>]),<br>...mapActions([<span class="hljs-string">&#x27;later_changenum&#x27;</span>]),<br><span class="hljs-function"><span class="hljs-title">add</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">let</span> num = <span class="hljs-built_in">this</span>.$store.state.num;<br><span class="hljs-built_in">this</span>.changenum(++num);<br>&#125;,<br><span class="hljs-function"><span class="hljs-title">add2</span>(<span class="hljs-params"></span>)</span> &#123;<br><span class="hljs-keyword">let</span> num = <span class="hljs-built_in">this</span>.$store.state.num;<br><span class="hljs-built_in">this</span>.later_changenum(++num);<br>&#125;<br>&#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>flex布局</title>
    <link href="/2021/01/04/1.flex%E5%B8%83%E5%B1%80/"/>
    <url>/2021/01/04/1.flex%E5%B8%83%E5%B1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h1><style>img{    width:500px}</style><blockquote><p>flex 英文直观意思为伸缩，我们可以理解为 “弹性” 布局。<br>也许你听到过有人讲flex不兼容某些低版本浏览器~，但是在2021年,兼容性问题早已是老黄历，大胆用。<br>掌握flex布局，可以显著提高我们前端程序员的幸福感。</p></blockquote><h2 id="flex容器"><a href="#flex容器" class="headerlink" title="flex容器"></a>flex容器</h2><blockquote><p>只需要在元素上加上display:flex属性或者display:inline-flex，该元素就自动成为了一个flex容器<br>开启了flex布局后,他的子元素自动成为容器成员.<br>容器成员的float、clear和vertical-align属性将失效</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">1</span>&lt;/div&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">2</span>&lt;/div&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">3</span>&lt;/div&gt;<br>&lt;/div&gt;<br><br>.<span class="hljs-attribute">content</span>&#123;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">flex-direction</span>: column;<br>&#125;<br><span class="hljs-comment">/* item成为了容器成员 */</span><br>.item&#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;<span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">float</span>: left; <span class="hljs-comment">/* 此时float:left无效 */</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="容器里的轴"><a href="#容器里的轴" class="headerlink" title="容器里的轴"></a>容器里的轴</h2><blockquote><p>轴的概念非常重要,容器元素默认按照<strong>主轴的方向排列</strong>,换行时往交叉轴的方向去换行</p></blockquote><ul><li><p>主轴:主轴默认是横的，顺序是从左到右</p></li><li><p>交叉轴:交叉抽默认是竖的，顺序是从上到下</p></li><li><p>也可以理解为<strong>主轴顺时针旋转90度就成了交叉轴</strong></p></li></ul><p><img src="./flex-imgs/cross.jpg"></p><h2 id="容器的属性"><a href="#容器的属性" class="headerlink" title="容器的属性"></a>容器的属性</h2><blockquote><p>写在容器本身上</p></blockquote><ul><li><p>flex-direction</p></li><li><p>flex-wrap</p></li><li><p>flex-flow</p></li><li><p>justify-content</p></li><li><p>align-items</p></li><li><p>align-content</p></li></ul><h3 id="flex-direction-决定了主轴的方向"><a href="#flex-direction-决定了主轴的方向" class="headerlink" title="flex-direction 决定了主轴的方向"></a>flex-direction 决定了主轴的方向</h3><ol><li>row:(默认值)横向从左到右。</li><li>row-reverse:横向从右到左。</li><li>column: 竖向从上到下。</li><li>column-reverse:竖向从下到上。</li></ol><blockquote><p>改变了主轴后，交叉轴随之改变  就是主轴顺时针旋转90度</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">1</span>&lt;/div&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">2</span>&lt;/div&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">3</span>&lt;/div&gt;<br>&lt;<span class="hljs-selector-tag">div</span> class=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">4</span>&lt;/div&gt;<br>&lt;/div&gt;<br><br>.<span class="hljs-attribute">content</span>&#123;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">360px</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">360px</span>;<br><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#999</span>;<br><span class="hljs-comment">/* flex-direction: row; */</span><br><span class="hljs-comment">/* flex-direction: row-reverse; */</span><br><span class="hljs-comment">/* flex-direction: column; */</span><br><span class="hljs-attribute">flex-direction</span>: column-reverse;<br>&#125;<br>.item&#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/direction1.jpg"><br><img src="./flex-imgs/direction2.jpg"><br><img src="./flex-imgs/direction3.jpg"><br><img src="./flex-imgs/direction4.jpg"></p><h3 id="flex-wrap-换行方式"><a href="#flex-wrap-换行方式" class="headerlink" title="flex-wrap  换行方式"></a>flex-wrap  换行方式</h3><blockquote><p>注意 flex元素默认是不换行的  </p></blockquote><blockquote><p>ps:那如果内容实在排不下怎么办? flex子元素会智能压缩空间(宽高失效，line-height,padding，font-size有效),一直压倒内容部分，如果压缩完还排不下，会溢出父元素。<br>如果子元素里没内容(空div,设的有宽高),那他会压缩到这个div的宽度为0为止 </p></blockquote><ol><li>nowrap (默认值) 不换行  </li><li>wrap  换行 第一行在上</li><li>wrap-reverse  第一行在下</li></ol><h3 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h3><blockquote><p>flew-flow为flex-direction和flex-wrap的简写  不再赘述</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br>flex-flow: row nowrap;<br><span class="hljs-comment">&lt;!-- 主轴从左到右，不换行--&gt;</span><br><br></code></pre></td></tr></table></figure><h3 id="justify-content-主轴对齐方式"><a href="#justify-content-主轴对齐方式" class="headerlink" title="justify-content 主轴对齐方式"></a>justify-content 主轴对齐方式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.content</span>&#123;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;<br><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#999</span>;<br><span class="hljs-comment">/* 主轴方向 */</span><br><span class="hljs-comment">/* flex-direction: row; */</span><br><span class="hljs-comment">/* flex-direction: row-reverse; */</span><br><span class="hljs-comment">/* flex-direction: column; */</span><br><span class="hljs-comment">/* flex-direction: column-reverse; */</span><br><br><span class="hljs-comment">/* 换行方式 */</span><br><span class="hljs-comment">/* flex-wrap: wrap-reverse; */</span><br><span class="hljs-comment">/* flex-wrap: wrap; */</span><br><span class="hljs-comment">/* flex-wrap: nowrap; */</span><br><br><span class="hljs-comment">/* flex-flow */</span><br><span class="hljs-attribute">flex-flow</span>: row nowrap;<br><br><span class="hljs-comment">/* 主轴对齐方式 */</span><br><br> <span class="hljs-attribute">justify-content</span>: flex-start; <br><span class="hljs-comment">/* justify-content: flex-end; */</span><br><span class="hljs-comment">/* justify-content: center; */</span><br><span class="hljs-comment">/* justify-content: space-around; */</span><br><span class="hljs-comment">/* justify-content: space-between; */</span><br><span class="hljs-comment">/* justify-content: space-evenly; */</span><br><br>&#125;<br></code></pre></td></tr></table></figure><ol><li>flex-start：与主轴的起点对齐</li></ol><p><img src="./flex-imgs/justify-content-flex-start.jpg"></p><ol start="2"><li>flex-end:与主轴的终点对齐</li></ol><p><img src="./flex-imgs/justify-content-flex-end.jpg"></p><ol start="3"><li>center:居中</li></ol><p><img src="./flex-imgs/justify-content-center.jpg"></p><ol start="4"><li>space-between:两边分别对齐主轴的两端，中间的均匀分布</li></ol><p><img src="./flex-imgs/justify-content-space-between.jpg"></p><ol start="5"><li>space-around：中间距离是两边距离的二倍。</li></ol><p><img src="./flex-imgs/justify-content-space-around.jpg"></p><ol start="6"><li>space-evenly：均匀分布。</li></ol><p><img src="./flex-imgs/justify-content-space-evenly.jpg"></p><h3 id="align-items定义了项目在交叉轴上的对齐方式"><a href="#align-items定义了项目在交叉轴上的对齐方式" class="headerlink" title="align-items定义了项目在交叉轴上的对齐方式"></a>align-items定义了项目在交叉轴上的对齐方式</h3><ol><li><p>flex-start:交叉轴的起点对齐(默认)</p></li><li><p>flex-end:交叉轴的终点对齐</p></li><li><p>center:交叉轴的中间对齐</p></li><li><p>baseline:项目中第一行文字基线对齐</p></li><li><p>stretch:如果项目未设置高度或者auto,将占领整个屏幕的高度。</p></li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">flex-flow</span>: row nowrap;<br><span class="hljs-attribute">align-items</span>: flex-start;<br><br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/align-items-flex-start.jpg"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">flex-flow</span>: row nowrap;<br><span class="hljs-attribute">align-items</span>: flex-end;<br><br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/align-items-flex-end.jpg"></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">flex-flow</span>: row nowrap;<br><span class="hljs-attribute">align-items</span>: center;<br><br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/align-items-center.jpg"></p><h3 id="align-content-定义了多根轴线的对齐方式。"><a href="#align-content-定义了多根轴线的对齐方式。" class="headerlink" title="align-content 定义了多根轴线的对齐方式。"></a>align-content 定义了多根轴线的对齐方式。</h3><blockquote><p>用于控制多行项目的对齐方式，如果项目只有一行则不会起作用；<br>默认stretch，即在项目没设置高度，或高度为auto情况下让项目填满整个容器，与align-items类似。</p></blockquote><ol><li>flex-start：与交叉轴的起点对齐。</li><li>flex-end：与交叉轴的终点对齐。</li><li>center：与交叉轴的中点对齐。</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li>stretch（默认值）：轴线占满整个交叉轴。</li><li>space-evenly;：在交叉轴平均分布。</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs awk">.content&#123;<br>display: flex;<br>width: <span class="hljs-number">600</span>px;<br>height: <span class="hljs-number">600</span>px;<br>border: <span class="hljs-number">1</span>px solid <span class="hljs-comment">#999;</span><br><span class="hljs-regexp">/* 主轴方向 */</span><br><span class="hljs-regexp">/* flex-direction: row; */</span><br><span class="hljs-regexp">/* flex-direction: row-reverse; */</span><br><span class="hljs-regexp">/* flex-direction: column; */</span><br><span class="hljs-regexp">/* flex-direction: column-reverse; */</span><br><br><span class="hljs-regexp">/* 换行方式 */</span><br><span class="hljs-regexp">/* flex-wrap: wrap-reverse; */</span><br><span class="hljs-regexp">/* flex-wrap: wrap; */</span><br><span class="hljs-regexp">/* flex-wrap: nowrap; */</span><br><br><span class="hljs-regexp">/* flex-flow */</span><br>flex-flow: row wrap;<br><br><span class="hljs-regexp">/* 主轴对齐方式 */</span><br><br><span class="hljs-regexp">/* justify-content: flex-start; */</span><br><span class="hljs-regexp">/* justify-content: flex-end; */</span><br><span class="hljs-regexp">/* justify-content: center; */</span><br><span class="hljs-regexp">/* justify-content: space-around; */</span><br><span class="hljs-regexp">/* justify-content: space-between; */</span><br><span class="hljs-regexp">/* justify-content: space-evenly; */</span><br><br>     <span class="hljs-regexp">/* 交叉轴对齐方式 */</span><br>    <span class="hljs-regexp">/* align-items: center; */</span><br><span class="hljs-regexp">/* align-items:  flex-start; */</span><br><span class="hljs-regexp">/* align-items:  flex-end; */</span><br> <span class="hljs-regexp">/* align-items:  baseline; */</span><br> <span class="hljs-regexp">/* align-items: stretch; */</span><br> <br> <span class="hljs-regexp">/* 多个交叉轴对齐方式 */</span><br> <span class="hljs-regexp">/* align-content: flex-start; */</span><br> <span class="hljs-regexp">/* align-content:flex-end; */</span><br> <span class="hljs-regexp">/* align-content: center; */</span><br><span class="hljs-regexp">/* align-content: space-between; */</span><br><span class="hljs-regexp">/* align-content: space-around; */</span><br>align-content: space-evenly;<br><span class="hljs-regexp">/* align-content:stretch; */</span><br><br><br><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/align-content.png"></p><h2 id="容器的项目属性"><a href="#容器的项目属性" class="headerlink" title="容器的项目属性"></a>容器的项目属性</h2><blockquote><p>项目属性是定义在子元素上的 他有6个值  如下：</p></blockquote><ul><li><p>order  </p></li><li><p>flex-grow </p></li><li><p>flex-shrink</p></li><li><p>flex-basis</p></li><li><p>flex</p></li><li><p>align-self</p></li></ul><h4 id="order-默认0，用于决定项目排列顺序，数值越小，项目排列越靠前。"><a href="#order-默认0，用于决定项目排列顺序，数值越小，项目排列越靠前。" class="headerlink" title="order 默认0，用于决定项目排列顺序，数值越小，项目排列越靠前。"></a>order 默认0，用于决定项目排列顺序，数值越小，项目排列越靠前。</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.item</span>&#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">line-height</span>:<span class="hljs-number">40px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(1)</span>&#123;<br><span class="hljs-attribute">order</span>: <span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(2)</span>&#123;<br><span class="hljs-attribute">order</span>: <span class="hljs-number">9</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(3)</span>&#123;<br><span class="hljs-attribute">order</span>: <span class="hljs-number">100</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(4)</span>&#123;<br><span class="hljs-attribute">order</span>: <span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(5)</span>&#123;<br><span class="hljs-attribute">order</span>: <span class="hljs-number">1</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/order.jpg"></p><h4 id="flex-grow"><a href="#flex-grow" class="headerlink" title="flex-grow"></a>flex-grow</h4><h4 id="比如父元素宽度600-三个子元素宽度都是100-那肯定是还有剩余空间（300），如何弹性的填满他们呢"><a href="#比如父元素宽度600-三个子元素宽度都是100-那肯定是还有剩余空间（300），如何弹性的填满他们呢" class="headerlink" title="比如父元素宽度600  三个子元素宽度都是100 那肯定是还有剩余空间（300），如何弹性的填满他们呢?"></a>比如父元素宽度600  三个子元素宽度都是100 那肯定是还有剩余空间（300），如何弹性的填满他们呢?</h4><h4 id="flex-grow决定如何填满他们，这个非常像分家产，富豪去世了，大房分多少，二房分多少等等。"><a href="#flex-grow决定如何填满他们，这个非常像分家产，富豪去世了，大房分多少，二房分多少等等。" class="headerlink" title="flex-grow决定如何填满他们，这个非常像分家产，富豪去世了，大房分多少，二房分多少等等。"></a>flex-grow决定如何填满他们，这个非常像分家产，富豪去世了，大房分多少，二房分多少等等。</h4><blockquote><p>默认0，用于决定项目在有剩余空间的情况下是否放大，默认0 是不放大；<br>注意，即便设置了固定宽度，也会放大。</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-selector-class">.item</span>&#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">line-height</span>:<span class="hljs-number">40px</span>;<br><span class="hljs-attribute">outline</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;<br><span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">0</span>; <span class="hljs-comment">/* 为0 无事发生 */</span><br><span class="hljs-attribute">flex-grow</span>:<span class="hljs-number">1</span>; 每个子元素宽度变成了200 <br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>这里剩余分配的概念很好理解,已flex-grow:1为例子 </p><ol><li>总宽度600  三个子元素各100，占了300  剩余300</li><li>item属性里有flex-grow:1; 证明三个子元素都想来分家产 总股份是1+1+1=3    他们的占比都是1/3</li><li>那三个子元素分到的就是300*1/3 = 100    再加上自己宽度100  最终算出来宽度200</li></ol><p>所以说，子元素如果等分的话，flex-grow写多少无所谓  比如上边flex-grow:5<br>总股份是5+5+5 = 15    但是每个人的占比没变，还是1/3所以无所谓</p><p>那如果是占比不一样的情况呢?</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.item</span> &#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">40px</span>;<br><span class="hljs-attribute">outline</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;<br>&#125;<br><br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;<br><span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(2)</span> &#123;<br><span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-selector-class">.item</span><span class="hljs-selector-pseudo">:nth-child(3)</span> &#123;<br><span class="hljs-attribute">flex-grow</span>: <span class="hljs-number">2</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>代码如上，把123个元素的flex-grow分别设置为0 1 2</p><p>现在总股份依然是3  但是元素1没多占,元素2分到100  元素3分到200</p><p>那他们的宽度会变成 100 200 300     </p><p><img src="./flex-imgs/flex-grow.jpg"></p><h4 id="flex-shrink"><a href="#flex-shrink" class="headerlink" title="flex-shrink"></a>flex-shrink</h4><h4 id="flex-shrink属性定义了项目的缩小比例，默认为1，如果flex-wrap设置为nowrap不折行，但是空间不足，那该项目将缩小。"><a href="#flex-shrink属性定义了项目的缩小比例，默认为1，如果flex-wrap设置为nowrap不折行，但是空间不足，那该项目将缩小。" class="headerlink" title="flex-shrink属性定义了项目的缩小比例，默认为1，如果flex-wrap设置为nowrap不折行，但是空间不足，那该项目将缩小。"></a>flex-shrink属性定义了项目的缩小比例，默认为1，如果flex-wrap设置为nowrap不折行，但是空间不足，那该项目将缩小。</h4><h4 id="他的默认值为1，也就是所有子元素一起等比缩小。-这个比较像出事了，需要大家凑钱"><a href="#他的默认值为1，也就是所有子元素一起等比缩小。-这个比较像出事了，需要大家凑钱" class="headerlink" title="他的默认值为1，也就是所有子元素一起等比缩小。 这个比较像出事了，需要大家凑钱"></a>他的默认值为1，也就是所有子元素一起等比缩小。 这个比较像出事了，需要大家凑钱</h4><blockquote><p>flex-shrink:0时表示该不缩小</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs applescript">&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">1</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">2</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">3</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">4</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">5</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">6</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">7</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">8</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;/<span class="hljs-keyword">div</span>&gt;<br><br><br>.content&#123;<br>flex-flow: row nowrap; &lt;!<span class="hljs-comment">-- 不折行--&gt;</span><br><br>&#125;<br>.<span class="hljs-built_in">item</span> &#123;<br>height: <span class="hljs-number">100</span>px;<br>width: <span class="hljs-number">100</span>px;<br>margin: <span class="hljs-number">10</span>px <span class="hljs-number">0</span>px;<br>background: <span class="hljs-comment">#fc0;</span><br><span class="hljs-built_in">text</span>-align: center;<br>font-size: <span class="hljs-number">16</span>px;<br>color: <span class="hljs-comment">#fff;</span><br>line-height: <span class="hljs-number">40</span>px;<br>outline: <span class="hljs-number">1</span>px solid <span class="hljs-comment">#f00;</span><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/flex-shrink1.jpg"></p><p>flex-shrink:0时 不压缩</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.item</span> &#123;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0px</span>;<br><span class="hljs-attribute">background</span>: <span class="hljs-number">#fc0</span>;<br><span class="hljs-attribute">text-align</span>: center;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">40px</span>;<br><span class="hljs-attribute">outline</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#f00</span>;<br><span class="hljs-attribute">flex-shrink</span>:<span class="hljs-number">0</span>   &lt;!-- 设置为不压缩--&gt;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="./flex-imgs/flex-shrink2.jpg"></p><p>那么这个压缩怎么计算的呢？</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">1</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">2</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">3</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">4</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">5</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">6</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;<span class="hljs-keyword">div</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;<span class="hljs-number">7</span>&lt;/<span class="hljs-keyword">div</span>&gt;<br>&lt;/<span class="hljs-keyword">div</span>&gt;<br>.<span class="hljs-built_in">item</span> &#123;<br>height: <span class="hljs-number">100</span>px;<br>width: <span class="hljs-number">100</span>px;<br>margin: <span class="hljs-number">10</span>px <span class="hljs-number">0</span>px;<br>background: <span class="hljs-comment">#fc0;</span><br><span class="hljs-built_in">text</span>-align: center;<br>font-size: <span class="hljs-number">16</span>px;<br>color: <span class="hljs-comment">#fff;</span><br>line-height: <span class="hljs-number">40</span>px;<br>outline: <span class="hljs-number">1</span>px solid <span class="hljs-comment">#f00;</span><br>flex-shrink: <span class="hljs-number">0</span>;<br>&#125;<br><br>.<span class="hljs-built_in">item</span>:nth-child(<span class="hljs-number">1</span>) &#123;<br>flex-shrink: <span class="hljs-number">3</span>;<br>width:<span class="hljs-number">200</span>px<br>&#125;<br>.<span class="hljs-built_in">item</span>:nth-child(<span class="hljs-number">2</span>) &#123;<br>flex-shrink: <span class="hljs-number">4</span>;<br>&#125;<br>.<span class="hljs-built_in">item</span>:nth-child(<span class="hljs-number">3</span>) &#123;<br>flex-shrink: <span class="hljs-number">3</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>以上，我们让元素 4567不压缩   只压缩123  而且元素1的宽度设置为200 他的计算如下：</p><ol><li>父级宽度600  子元素正常宽度800   那就是有200的缺口</li><li>这里需要注意了，压缩和flow不同，他不是分份额那么简单了。他还需要考虑元素宽度的情况。</li><li>计算出总份额：3<em>200 + 4</em>100 +3*100 = 1300;</li><li>元素1的比例就是 3*200/1300 = 0.46153846153846156; 意思就是说200的缺口里元素1得出 46.153846153846156%;</li><li>元素2的比例就是 4*100/1300 = 0.3076923076923077; 意思就是说200的缺口里元素2得出 30.76923076923077%;</li><li>于是 200*46.153846153846156% = 92.30768;  元素1得宽度是自身宽度200-92.30768 = 107.69232</li></ol><p>如图所示，结果符合我们的预期</p><p><img src="./flex-imgs/flex-shrink3.jpg"></p><h3 id="flex-basis-设置元素主轴初始尺寸"><a href="#flex-basis-设置元素主轴初始尺寸" class="headerlink" title="flex-basis  设置元素主轴初始尺寸"></a>flex-basis  设置元素主轴初始尺寸</h3><blockquote><p>它的默认值为auto，即项目的本来大小。<br>flex-basis不是宽度或者高度,主轴是横向时他为宽度  主轴为竖向时他为高度<br>如果同时设置的有宽高，那么他的优先级高。</p></blockquote><h3 id="flex-flex属性是flex-grow-flex-shrink-和-flex-basis的简写，默认值为0-1-auto。后两个属性可选。"><a href="#flex-flex属性是flex-grow-flex-shrink-和-flex-basis的简写，默认值为0-1-auto。后两个属性可选。" class="headerlink" title="flex flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。"></a>flex flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">flex-grow</span>:<span class="hljs-number">1</span>;<br><span class="hljs-attribute">flex-shrink</span>:<span class="hljs-number">1</span>;<br><span class="hljs-attribute">flex-basis</span>:auto;<br><br>可以写成一句<br><span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span> <span class="hljs-number">1</span> auto;<br><br><br></code></pre></td></tr></table></figure><h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><blockquote><p>用于让个别项目拥有与其它项目不同的对齐方式，各值的表现与父容器的align-items属性完全一致。<br>表示继承父容器的align-items属性。如果没父元素，则默认stretch。</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/12/24/hello-world/"/>
    <url>/2020/12/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
